version: '2.1'
orbs:
  circleci-maven-release-orb: sonatype-nexus-community/circleci-maven-release-orb@0.0.18
jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0.9
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run: echo $GPG_ASC_BASE64NEW | base64 --decode |  gpg --batch --no-tty --import --yes
      - run: chmod u+x mvnw
      - run: ./mvnw -s .circleci/maven.settings.xml clean verify -X
      - run: mvn help:evaluate -Dexpression=project.version -q -DforceStdout > target/version.txt
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - store_artifacts:
          path: target/*.jar
      - persist_to_workspace:
          root: .
          paths:
            - target/*.jar
            - target/version.txt

  deploy:
    docker:
      - image: cimg/openjdk:17.0.9
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run: echo $GPG_ASC_BASE64NEW | base64 --decode | gpg --batch --no-tty --import --yes
      - run: chmod u+x mvnw
      - run:  echo '#!/bin/bash' > format_env_var.sh
      - run:  echo 'input_var="$SERVER_OSSRH_PASSWORD"' >> format_env_var.sh
      - run:  echo 'input_var="$SERVER_OSSRH_USERNAME	"' >> format_env_var.sh
      - run: ./mvnw -s .circleci/maven.settings.xml clean deploy -DskipTests -X
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

  publish-github-release:
    docker:
      - image: circleci/golang:1.16.12
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/cxflowtestuser/ghr 
            go get github.com/google/go-github/v47/github
            VERSION=$(cat ./target/version.txt)
            rm ./target/version.txt
            ghr -t ${GITHUB_TOKEN_CXFLOW} -u ${CIRCLE_PROJECT_USERNAME} -n ${VERSION} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./target/

workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
      - publish-github-release:
          filters:
            branches:
              only: master
          requires:
            - build
